// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package types

type AddHostsApplicationRequest struct {
	Data []HostApplicationRequest `json:"data"`
}

type AutoFetchHostInfoRequest struct {
	HostIp            string `json:"host_ip"`                      // 主机IP
	FetchFromCmdb     bool   `json:"fetch_from_cmdb,optional"`     // 是否从CMDB获取
	FetchFromClusters bool   `json:"fetch_from_clusters,optional"` // 是否从集群实例表获取
}

type AutoFetchHostInfoResponse struct {
	Success      bool                   `json:"success"`
	Message      string                 `json:"message"`
	HardwareInfo ManualHostHardwareInfo `json:"hardware_info,optional"`
	Applications []HostApplicationInfo  `json:"applications,optional"`
	IdcInfo      IdcInfo                `json:"idc_info,optional"`
}

type AutoFetchResult struct {
	Success      bool                   `json:"success"`
	Message      string                 `json:"message"`
	HardwareInfo ManualHostHardwareInfo `json:"hardware_info,optional"`
	Applications []HostApplicationInfo  `json:"applications,optional"`
}

type BackupRestoreCheckInfo struct {
	ID          int    `json:"id"`
	CheckSeq    string `json:"check_seq"`
	CheckDB     string `json:"check_db"`
	CheckStatus string `json:"check_status"`
	CheckResult string `json:"check_result"`
	CheckTime   string `json:"check_time"`
}

type BackupRestoreCheckInfoListResponse struct {
	List []BackupRestoreCheckInfo `json:"list"`
}

type BaseResponse struct {
	Message string `json:"message"`
	Success bool   `json:"success,optional"`
}

type ClusterConfirmSummary struct {
	ReportFileURL string                 `json:"report_file_url"`
	PluginResults map[string]interface{} `json:"plugin_results"`
}

type ClusterGroup struct {
	ID             int    `json:"id"`
	ClusterName    string `json:"cluster_name"`
	GroupName      string `json:"group_name"`
	DepartmentName string `json:"department_name"`
}

type ClusterGroupListResponse struct {
	List []ClusterGroup `json:"list"`
}

type ClusterMemberResource struct {
	ID               int     `json:"id"`
	ClusterName      string  `json:"cluster_name"`
	ClusterGroupName string  `json:"cluster_group_name"`
	Ip               string  `json:"ip"`
	HostName         string  `json:"host_name"`
	Port             int     `json:"port"`
	InstanceRole     string  `json:"instance_role"`
	TotalMemory      float64 `json:"total_memory"`
	UsedMemory       float64 `json:"used_memory"`
	TotalDisk        float64 `json:"total_disk"`
	UsedDisk         float64 `json:"used_disk"`
	CPUCores         int     `json:"cpu_cores"`
	CPULoad          float64 `json:"cpu_load"`
	DateTime         string  `json:"date_time"`
	DepartmentName   string  `json:"department_name"`
	SequenceNumber   int64   `json:"sequence_number"` // 序列号，用于确保数据唯一性和排序一致性
	CpuPercentMax    float64 `json:"cpu_percent_max,optional"`
	CpuPercentAvg    float64 `json:"cpu_percent_avg,optional"`
	CpuPercentMin    float64 `json:"cpu_percent_min,optional"`
	MemPercentMax    float64 `json:"mem_percent_max,optional"`
	MemPercentAvg    float64 `json:"mem_percent_avg,optional"`
	MemPercentMin    float64 `json:"mem_percent_min,optional"`
	DiskPercentMax   float64 `json:"disk_percent_max,optional"`
	DiskPercentAvg   float64 `json:"disk_percent_avg,optional"`
	DiskPercentMin   float64 `json:"disk_percent_min,optional"`
}

type ClusterResourceListResponse struct {
	Success bool                    `json:"success"`
	Message string                  `json:"message"`
	List    []ClusterMemberResource `json:"list"`
}

type ClusterResourceMax struct {
	ClusterName      string                  `json:"cluster_name"`
	ClusterGroupName string                  `json:"cluster_group_name"`
	DepartmentName   string                  `json:"department_name"`
	NodeCount        int                     `json:"node_count"`
	AvgCPULoad       float64                 `json:"avg_cpu_load"`
	AvgMemoryUsage   float64                 `json:"avg_memory_usage"`
	AvgDiskUsage     float64                 `json:"avg_disk_usage"`
	MaxCPULoad       float64                 `json:"max_cpu_load"`
	MaxMemoryUsage   float64                 `json:"max_memory_usage"`
	MaxDiskUsage     float64                 `json:"max_disk_usage"`
	TotalMemory      float64                 `json:"total_memory"`
	TotalDisk        float64                 `json:"total_disk"`
	MaxUsedMemory    float64                 `json:"max_used_memory"`
	MaxUsedDisk      float64                 `json:"max_used_disk"`
	MaxDateTime      string                  `json:"max_date_time"`
	MemberNodes      []ClusterMemberResource `json:"member_nodes"`
	CpuPercentMax    float64                 `json:"cpu_percent_max,optional"`
	CpuPercentAvg    float64                 `json:"cpu_percent_avg,optional"`
	CpuPercentMin    float64                 `json:"cpu_percent_min,optional"`
	MemPercentMax    float64                 `json:"mem_percent_max,optional"`
	MemPercentAvg    float64                 `json:"mem_percent_avg,optional"`
	MemPercentMin    float64                 `json:"mem_percent_min,optional"`
	DiskPercentMax   float64                 `json:"disk_percent_max,optional"`
	DiskPercentAvg   float64                 `json:"disk_percent_avg,optional"`
	DiskPercentMin   float64                 `json:"disk_percent_min,optional"`
}

type ClusterResourceMaxListResponse struct {
	Success bool                 `json:"success"`
	Message string               `json:"message"`
	List    []ClusterResourceMax `json:"list"`
}

type ClusterResourceRequest struct {
	StartDate   string `form:"startDate,optional"`
	EndDate     string `form:"endDate,optional"`
	ClusterName string `form:"clusterName,optional"`
	GroupName   string `form:"groupName,optional"`
}

type ClusterResourceSummary struct {
	ClusterName string  `json:"cluster_name"`
	ClusterIPs  string  `json:"cluster_ips"`
	MaxCPU      float64 `json:"max_cpu"`
	AvgCPU      float64 `json:"avg_cpu"`
	MaxMemory   float64 `json:"max_memory"`
	AvgMemory   float64 `json:"avg_memory"`
	MaxDisk     float64 `json:"max_disk"`
	AvgDisk     float64 `json:"avg_disk"`
}

type ClusterResourceSummaryListResponse struct {
	List []ClusterResourceSummary `json:"list"`
}

type CreateExternalSyncTaskRequest struct {
	TaskName       string `json:"task_name"`                 // 任务名称（必填）
	Description    string `json:"description,optional"`      // 任务描述
	DataSource     string `json:"data_source"`               // 数据源: "elasticsearch"/"es" 或 "cmsys"
	EsEndpoint     string `json:"es_endpoint,optional"`      // ES接口地址（data_source=es时使用）
	EsIndexPattern string `json:"es_index_pattern,optional"` // ES索引模式（data_source=es时使用）
	CronExpression string `json:"cron_expression"`           // Cron表达式（必填）
	QueryTimeRange string `json:"query_time_range,optional"` // 查询时间范围（如"7d","30d"）
	CmsysQuery     string `json:"cmsys_query,optional"`      // CMSys查询参数（data_source=cmsys时使用）
	CreatedBy      string `json:"created_by,optional"`       // 创建人
}

type CreateExternalSyncTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	TaskId  int64  `json:"task_id,optional"`
}

type CreateScheduledTaskRequest struct {
	TaskName       string   `json:"task_name"`
	Description    string   `json:"description,optional"`
	CronExpression string   `json:"cron_expression"`
	HostIpList     []string `json:"host_ip_list"`
	ResourceType   string   `json:"resource_type"`          // cpu, memory, disk
	TargetPercent  int      `json:"target_percent"`         // 1-100
	Duration       int      `json:"duration"`               // 秒
	ScriptParams   string   `json:"script_params,optional"` // JSON格式
	ForceExecution bool     `json:"force_execution,optional"`
	CreatedBy      string   `json:"created_by,optional"`
}

type CreateScheduledTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	TaskId  int    `json:"task_id"`
}

type DatabaseSyncDetail struct {
	DatabaseType  string   `json:"database_type"`
	SyncedCount   int      `json:"synced_count"`
	ClusterGroups []string `json:"cluster_groups"`
}

type DeleteExternalSyncTaskRequest struct {
	TaskId int64 `path:"task_id"` // 任务ID
}

type DeleteExternalSyncTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type DeleteHostsApplicationRequest struct {
	AppIds []int `json:"app_ids"`
}

type DeleteScheduledTaskRequest struct {
	Id int `path:"id"`
}

type DeleteScheduledTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type DiskPrediction struct {
	ID                      int               `json:"id"`
	IP                      string            `json:"ip"`
	ClusterName             string            `json:"cluster_name"`
	GroupName               string            `json:"group_name"`
	DepartmentName          string            `json:"department_name"`
	CurrentDiskUsagePercent float32           `json:"current_disk_usage_percent"`
	TotalDisk               float32           `json:"total_disk"`
	UsedDisk                float32           `json:"used_disk"`
	DailyGrowthRate         float32           `json:"daily_growth_rate"`
	PredictedFullDate       string            `json:"predicted_full_date"`
	DaysUntilFull           int32             `json:"days_until_full"`
	IsHighRisk              bool              `json:"is_high_risk"`
	CreateAt                string            `json:"create_at"`
	UpdateAt                string            `json:"update_at"`
	Clusters                []HostClusterInfo `json:"clusters,optional"`
	IdcInfo                 IdcInfo           `json:"idc_info,optional"` // IDC机房信息
}

type DiskPredictionListResponse struct {
	Success bool             `json:"success"`
	Message string           `json:"message"`
	List    []DiskPrediction `json:"list"`
}

type DiskPredictionResponse struct {
	Predictions map[string]interface{} `json:"predictions"`
}

type EmailRequest struct {
	To      string `json:"to"`
	Subject string `json:"subject"`
	Content string `json:"content"`
}

type EnableExternalSyncTaskRequest struct {
	Id        int64 `json:"id"`         // 任务ID
	IsEnabled bool  `json:"is_enabled"` // 是否启用
}

type EnableExternalSyncTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type EnableScheduledTaskRequest struct {
	Id        int  `json:"id"`
	IsEnabled bool `json:"is_enabled"`
}

type EnableScheduledTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type ExecuteExternalSyncByFileRequest struct {
	DataSource     string `json:"data_source"`               // 数据源: "elasticsearch"/"es" 或 "cmsys"
	TaskName       string `json:"task_name,optional"`        // 任务名称
	FileContent    string `json:"file_content"`              // 文件内容（换行符分隔的IP列表）
	EsEndpoint     string `json:"es_endpoint,optional"`      // ES接口地址
	EsIndexPattern string `json:"es_index_pattern,optional"` // ES索引模式
	QueryTimeRange string `json:"query_time_range,optional"` // 查询时间范围
	Query          string `json:"query,optional"`            // CMSys查询参数
}

type ExecuteExternalSyncFullSyncRequest struct {
	DataSource     string `json:"data_source"`               // 数据源: "elasticsearch"/"es" 或 "cmsys"
	GroupName      string `json:"group_name,optional"`       // 组名（ES使用，默认"DB组"）
	QueryTimeRange string `json:"query_time_range,optional"` // 查询时间范围（ES使用，默认"30d"）
	EsEndpoint     string `json:"es_endpoint,optional"`      // ES接口地址（可选）
	TaskName       string `json:"task_name,optional"`        // 任务名称（用于记录）
	Query          string `json:"query,optional"`            // CMSys查询参数
}

type ExecuteExternalSyncFullSyncResponse struct {
	Success               bool     `json:"success"`
	Message               string   `json:"message"`
	DataSource            string   `json:"data_source,optional"`               // 数据源类型
	ExecutionId           int64    `json:"execution_id,optional"`              // 执行记录ID
	TotalHosts            int32    `json:"total_hosts,optional"`               // 总主机数
	NewHostsCount         int32    `json:"new_hosts_count,optional"`           // 新增到hosts_pool的主机数
	UpdatedHostsCount     int32    `json:"updated_hosts_count,optional"`       // 更新到server_resources的主机数
	SuccessCount          int32    `json:"success_count,optional"`             // 成功数（CMSys使用）
	FailedCount           int32    `json:"failed_count,optional"`              // 失败数量
	NotInPoolCount        int32    `json:"not_in_pool_count,optional"`         // 不在池中数量（ES使用）
	NotInDatasourceCount  int32    `json:"not_in_datasource_count,optional"`   // 数据源中不存在（CMSys使用）
	NewHostIpList         []string `json:"new_host_ip_list,optional"`          // 新增的主机IP列表（ES使用）
	UpdatedHostIpList     []string `json:"updated_host_ip_list,optional"`      // 更新的主机IP列表（ES使用）
	SuccessIpList         []string `json:"success_ip_list,optional"`           // 成功的IP列表（CMSys使用）
	FailedIpList          []string `json:"failed_ip_list,optional"`            // 失败的主机IP列表
	NotInPoolIpList       []string `json:"not_in_pool_ip_list,optional"`       // 不在池中的IP列表（ES使用）
	NotInDatasourceIpList []string `json:"not_in_datasource_ip_list,optional"` // 数据源中不存在的IP列表（CMSys使用）
}

type ExecuteExternalSyncRequest struct {
	DataSource     string   `json:"data_source"`               // 数据源: "elasticsearch"/"es" 或 "cmsys"
	TaskName       string   `json:"task_name,optional"`        // 任务名称（用于记录）
	HostIpList     []string `json:"host_ip_list"`              // 主机IP列表
	EsEndpoint     string   `json:"es_endpoint,optional"`      // ES接口地址（data_source=es时可选）
	EsIndexPattern string   `json:"es_index_pattern,optional"` // ES索引模式（data_source=es时可选）
	QueryTimeRange string   `json:"query_time_range,optional"` // 查询时间范围
	Query          string   `json:"query,optional"`            // CMSys查询参数（data_source=cmsys时使用）
}

type ExecuteExternalSyncResponse struct {
	Success               bool     `json:"success"`
	Message               string   `json:"message"`
	DataSource            string   `json:"data_source,optional"`               // 数据源类型
	ExecutionId           int64    `json:"execution_id,optional"`              // 执行记录ID
	TotalHosts            int32    `json:"total_hosts,optional"`               // 总主机数
	SuccessCount          int32    `json:"success_count,optional"`             // 成功数
	FailedCount           int32    `json:"failed_count,optional"`              // 失败数
	NotInPoolCount        int32    `json:"not_in_pool_count,optional"`         // 不在池中数量（ES使用）
	NotInDatasourceCount  int32    `json:"not_in_datasource_count,optional"`   // 数据源中不存在（CMSys使用）
	NewHostsCount         int32    `json:"new_hosts_count,optional"`           // 新增主机数（全量同步使用）
	UpdatedHostsCount     int32    `json:"updated_hosts_count,optional"`       // 更新主机数（全量同步使用）
	SuccessIpList         []string `json:"success_ip_list,optional"`           // 成功的IP列表
	FailedIpList          []string `json:"failed_ip_list,optional"`            // 失败的IP列表
	NotInPoolIpList       []string `json:"not_in_pool_ip_list,optional"`       // 不在池中的IP列表（ES使用）
	NotInDatasourceIpList []string `json:"not_in_datasource_ip_list,optional"` // 数据源中不存在的IP列表（CMSys使用）
	NewHostIpList         []string `json:"new_host_ip_list,optional"`          // 新增主机IP列表（全量同步使用）
	UpdatedHostIpList     []string `json:"updated_host_ip_list,optional"`      // 更新主机IP列表（全量同步使用）
}

type ExternalCmdbHost struct {
	CmdbId       string `json:"cmdb_id"`
	DomainNum    string `json:"domain_num"`
	HostName     string `json:"host_name"`
	HostIp       string `json:"host_ip"`
	HostType     string `json:"host_type"`
	HostOwner    string `json:"host_owner"`
	OpsIamCode   string `json:"ops_iam_code"`
	OwnerGroup   string `json:"owner_group"`
	OwnerIamCode string `json:"owner_iam_code"`
	H3cId        string `json:"h3c_id"`
	H3cStatus    string `json:"h3c_status"`
	Disk         int64  `json:"disk"`  // 磁盘大小(GB)
	Ram          int64  `json:"ram"`   // 内存大小(MB)
	Vcpus        int64  `json:"vcpus"` // CPU核数
	CreatedAt    string `json:"created_at"`
	UpdatedAt    string `json:"updated_at"`
	IfH3cSync    string `json:"if_h3c_sync"`
	H3cImageId   string `json:"h3c_image_id"`
	H3cHmName    string `json:"h3c_hm_name"`
	IsDelete     string `json:"is_delete"`
	AppName      string `json:"app_name"`      // 部署的应用名称
	DataSource   string `json:"data_source"`   // 数据源
	BizGroup     string `json:"biz_group"`     // 业务组
	OpsBizGroup  string `json:"ops_biz_group"` // 运维业务组
	Message      string `json:"message"`       // 同步结果消息
	Success      bool   `json:"success"`       // 同步是否成功
}

type ExternalSyncExecutionDetailInfo struct {
	HostIp         string  `json:"host_ip"`
	HostName       string  `json:"host_name"`
	SyncStatus     string  `json:"sync_status"` // success, failed, not_in_pool, not_in_datasource
	ErrorMessage   string  `json:"error_message,optional"`
	MaxCpu         float64 `json:"max_cpu,optional"`
	AvgCpu         float64 `json:"avg_cpu,optional"`
	MaxMemory      float64 `json:"max_memory,optional"`
	AvgMemory      float64 `json:"avg_memory,optional"`
	MaxDisk        float64 `json:"max_disk,optional"`
	AvgDisk        float64 `json:"avg_disk,optional"`
	DataPointCount int32   `json:"data_point_count,optional"`
	CreatedAt      string  `json:"created_at"`
}

type ExternalSyncExecutionLogInfo struct {
	Id                   int64  `json:"id"`
	TaskId               int64  `json:"task_id,optional"`
	TaskName             string `json:"task_name"`
	DataSource           string `json:"data_source"` // "elasticsearch" 或 "cmsys"
	ExecutionTime        string `json:"execution_time"`
	ExecutionStatus      string `json:"execution_status"` // running, success, failed, partial
	TotalHosts           int32  `json:"total_hosts"`
	SuccessCount         int32  `json:"success_count"`
	FailedCount          int32  `json:"failed_count"`
	NotInPoolCount       int32  `json:"not_in_pool_count,optional"`       // ES使用
	NotInDatasourceCount int32  `json:"not_in_datasource_count,optional"` // CMSys使用
	ErrorMessage         string `json:"error_message,optional"`
	DurationMs           int32  `json:"duration_ms"`
	QueryTimeRange       string `json:"query_time_range,optional"`
	CreatedAt            string `json:"created_at"`
}

type ExternalSyncTaskInfo struct {
	Id                int64  `json:"id"`
	TaskName          string `json:"task_name"`
	Description       string `json:"description,optional"`
	DataSource        string `json:"data_source"` // "elasticsearch" 或 "cmsys"
	EsEndpoint        string `json:"es_endpoint,optional"`
	EsIndexPattern    string `json:"es_index_pattern,optional"`
	CronExpression    string `json:"cron_expression"`
	QueryTimeRange    string `json:"query_time_range,optional"`
	CmsysQuery        string `json:"cmsys_query,optional"` // CMSys查询参数
	IsEnabled         bool   `json:"is_enabled"`
	CreatedBy         string `json:"created_by,optional"`
	CreatedAt         string `json:"created_at"`
	UpdatedAt         string `json:"updated_at"`
	LastExecutionTime string `json:"last_execution_time,optional"`
	NextExecutionTime string `json:"next_execution_time,optional"`
}

type FetchHostsHardwareInfoRequest struct {
	HostIpList []string `json:"host_ip_list,optional"` // 要获取硬件信息的主机IP列表，为空则获取所有主机
}

type FetchHostsHardwareInfoResponse struct {
	Success          bool               `json:"success"`
	Message          string             `json:"message"`
	TotalHosts       int                `json:"total_hosts"`        // 总主机数
	UpdatedHosts     int                `json:"updated_hosts"`      // 成功更新的主机数
	FailedHosts      int                `json:"failed_hosts"`       // 失败的主机数
	HardwareInfoList []HostHardwareInfo `json:"hardware_info_list"` // 详细硬件信息列表
}

type GetExternalSyncExecutionDetailResponse struct {
	Success          bool                              `json:"success"`
	Message          string                            `json:"message"`
	ExecutionLog     ExternalSyncExecutionLogInfo      `json:"execution_log,optional"`
	ExecutionDetails []ExternalSyncExecutionDetailInfo `json:"execution_details,optional"`
}

type GetExternalSyncExecutionLogsRequest struct {
	TaskId     int64  `form:"task_id,optional"`     // 任务ID（可选，为空则查询所有）
	DataSource string `form:"data_source,optional"` // 数据源过滤
	Limit      int32  `form:"limit,optional"`       // 限制返回数量
}

type GetExternalSyncExecutionLogsResponse struct {
	Success       bool                           `json:"success"`
	Message       string                         `json:"message"`
	ExecutionLogs []ExternalSyncExecutionLogInfo `json:"execution_logs,optional"`
}

type GetExternalSyncTaskDetailResponse struct {
	Success bool                 `json:"success"`
	Message string               `json:"message"`
	Task    ExternalSyncTaskInfo `json:"task,optional"`
}

type GetExternalSyncTasksRequest struct {
	DataSource  string `form:"data_source,optional"`  // 数据源过滤
	EnabledOnly bool   `form:"enabled_only,optional"` // 是否只查询启用的任务
}

type GetExternalSyncTasksResponse struct {
	Success bool                   `json:"success"`
	Message string                 `json:"message"`
	Tasks   []ExternalSyncTaskInfo `json:"tasks,optional"`
}

type GetScheduledTaskExecutionDetailsResponse struct {
	Success bool                       `json:"success"`
	Message string                     `json:"message"`
	Data    ScheduledTaskExecutionInfo `json:"data"`
}

type GetScheduledTaskExecutionHistoryRequest struct {
	ScheduledTaskId int `form:"scheduled_task_id"`
	Limit           int `form:"limit,optional"`
}

type GetScheduledTaskExecutionHistoryResponse struct {
	Success        bool                                `json:"success"`
	Message        string                              `json:"message"`
	HistoryRecords []ScheduledTaskExecutionHistoryInfo `json:"history_records"`
}

type GetScheduledTasksRequest struct {
	ResourceType string `form:"resource_type,optional"`
	EnabledOnly  bool   `form:"enabled_only,optional"`
}

type GetScheduledTasksResponse struct {
	Success bool                `json:"success"`
	Message string              `json:"message"`
	Tasks   []ScheduledTaskInfo `json:"tasks"`
}

type HardwareResourceVerificationHistory struct {
	Id              int    `json:"id"`
	TaskId          string `json:"task_id"`
	HostIp          string `json:"host_ip"`
	ResourceType    string `json:"resource_type"`
	TargetPercent   int    `json:"target_percent"`
	Duration        int    `json:"duration"`
	ExecutionStatus string `json:"execution_status"`
	StartTime       string `json:"start_time,optional"`
	EndTime         string `json:"end_time,optional"`
	ExitCode        int    `json:"exit_code,optional"`
	StdoutLog       string `json:"stdout_log,optional"`
	StderrLog       string `json:"stderr_log,optional"`
	ResultSummary   string `json:"result_summary,optional"`
	CreateTime      string `json:"create_time"`
	SSHError        string `json:"ssh_error,optional"`
}

type HardwareResourceVerificationHistoryRequest struct {
	HostIp       string `form:"host_ip"`
	ResourceType string `form:"resource_type,optional"`
	Limit        int    `form:"limit,optional"`
}

type HardwareResourceVerificationHistoryResponse struct {
	Success        bool                                  `json:"success"`
	Message        string                                `json:"message"`
	HistoryRecords []HardwareResourceVerificationHistory `json:"history_records"`
}

type HardwareResourceVerificationRequest struct {
	HostIpList     []string `json:"host_ip_list"`
	ResourceType   string   `json:"resource_type"`            // cpu, memory, disk
	TargetPercent  int      `json:"target_percent"`           // 1-100
	Duration       int      `json:"duration"`                 // 秒
	ForceExecution bool     `json:"force_execution,optional"` // 强制执行，默认false
	ScriptParams   string   `json:"script_params,optional"`   // JSON格式的额外参数
}

type HardwareResourceVerificationResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
	TaskId  string `json:"task_id"`
}

type HardwareResourceVerificationStatus struct {
	Id              int    `json:"id"`
	TaskId          string `json:"task_id"`
	HostIp          string `json:"host_ip"`
	ResourceType    string `json:"resource_type"`
	TargetPercent   int    `json:"target_percent"`
	Duration        int    `json:"duration"`
	ExecutionStatus string `json:"execution_status"` // pending, running, completed, failed
	StartTime       string `json:"start_time,optional"`
	EndTime         string `json:"end_time,optional"`
	ExitCode        int    `json:"exit_code,optional"`
	ResultSummary   string `json:"result_summary,optional"`
	CreateTime      string `json:"create_time"`
	SSHError        string `json:"ssh_error,optional"`
}

type HardwareResourceVerificationStatusRequest struct {
	HostIpList   []string `form:"host_ip_list,optional"`
	ResourceType string   `form:"resource_type,optional"`
}

type HardwareResourceVerificationStatusResponse struct {
	Success             bool                                 `json:"success"`
	Message             string                               `json:"message"`
	VerificationRecords []HardwareResourceVerificationStatus `json:"verification_records"`
}

type HostApplication struct {
	ID             int    `json:"id"`
	PoolID         int    `json:"pool_id"`
	ServerType     string `json:"server_type"`
	ServerVersion  string `json:"server_version"`
	ServerSubtitle string `json:"server_subtitle"`
	ClusterName    string `json:"cluster_name"`
	ServerProtocol string `json:"server_protocol"`
	ServerAddr     string `json:"server_addr"`
	DepartmentName string `json:"department_name"`
}

type HostApplicationInfo struct {
	ServerType     string `json:"server_type"`     // 服务类型
	ServerVersion  string `json:"server_version"`  // 服务版本
	ServerSubtitle string `json:"server_subtitle"` // 服务子标题
	ClusterName    string `json:"cluster_name"`    // 集群名称
	ServerProtocol string `json:"server_protocol"` // 服务协议
	ServerAddr     string `json:"server_addr"`     // 服务地址
	ServerPort     int    `json:"server_port"`     // 服务端口
	ServerRole     string `json:"server_role"`     // 服务角色
	ServerStatus   string `json:"server_status"`   // 服务状态
	DepartmentName string `json:"department_name"` // 部门名称
}

type HostApplicationRequest struct {
	HostId         int    `json:"host_id"`
	ServerType     string `json:"server_type"`
	ServerVersion  string `json:"server_version,optional"`
	ServerSubtitle string `json:"server_subtitle,optional"`
	ClusterName    string `json:"cluster_name,optional"`
	ServerProtocol string `json:"server_protocol,optional"`
	ServerAddr     string `json:"server_addr,optional"`
	ServerPort     int32  `json:"server_port,optional"`
	ServerRole     string `json:"server_role,optional"`
	ServerStatus   string `json:"server_status,optional"`
	DepartmentName string `json:"department_name,optional"`
}

type HostApplicationResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type HostClusterInfo struct {
	ClusterName      string `json:"cluster_name"`
	ClusterGroupName string `json:"cluster_group_name"`
	DepartmentName   string `json:"department_name"`
}

type HostHardwareInfo struct {
	HostIp   string `json:"host_ip"`
	HostName string `json:"host_name"`
	Disk     int64  `json:"disk"`    // 磁盘大小(GB)
	Ram      int64  `json:"ram"`     // 内存大小(GB)
	Vcpus    int64  `json:"vcpus"`   // CPU核数
	Message  string `json:"message"` // 获取结果或错误信息
	Success  bool   `json:"success"` // 是否成功获取
}

type HostPool struct {
	ID               int               `json:"id"`
	HostName         string            `json:"host_name"`
	HostIP           string            `json:"host_ip"`
	HostType         string            `json:"host_type"`
	H3cID            string            `json:"h3c_id"`
	H3cStatus        string            `json:"h3c_status"`
	DiskSize         int               `json:"disk_size"`
	RAM              int               `json:"ram"`
	VCPUs            int               `json:"vcpus"`
	IfH3cSync        string            `json:"if_h3c_sync"`
	H3cImgID         string            `json:"h3c_img_id"`
	H3cHmName        string            `json:"h3c_hm_name"`
	IsDelete         string            `json:"is_delete"`
	LeafNumber       string            `json:"leaf_number"`
	RackNumber       string            `json:"rack_number"`
	RackHeight       int               `json:"rack_height"`
	RackStartNumber  int               `json:"rack_start_number"`
	FromFactor       int               `json:"from_factor"`
	SerialNumber     string            `json:"serial_number"`
	IsDeleted        bool              `json:"is_deleted"`
	IsStatic         bool              `json:"is_static"`
	IdcInfo          IdcInfo           `json:"idc_info,optional"`
	HostApplications []HostApplication `json:"host_applications,optional"`
}

type HostPoolListResponse struct {
	List []HostPool `json:"list"`
}

type HostWithoutMonitoring struct {
	HostIp     string `json:"host_ip"`
	HostName   string `json:"host_name"`
	PoolName   string `json:"pool_name"`
	CreateTime string `json:"create_time"`
}

type IDCUsage struct {
	IDCName        string  `json:"idc_name"`
	TotalInstances int     `json:"total_instances"`
	AvgCPUUsage    float64 `json:"avg_cpu_usage"`
	AvgMemoryUsage float64 `json:"avg_memory_usage"`
	AvgDiskUsage   float64 `json:"avg_disk_usage"`
}

type IDCUsageListResponse struct {
	List []IDCUsage `json:"list"`
}

type IdcInfo struct {
	ID             int    `json:"id"`
	IdcName        string `json:"idc_name"`
	IdcCode        string `json:"idc_code"`
	IdcLocation    string `json:"idc_location,optional"`
	IdcDescription string `json:"idc_description,optional"`
}

type IdcListResponse struct {
	Success bool      `json:"success"`
	Message string    `json:"message"`
	List    []IdcInfo `json:"list"`
}

type LoadServerMetricsCSVProgressResponse struct {
	Success            bool    `json:"success"`
	Message            string  `json:"message"`
	TotalRows          int     `json:"total_rows"`
	ProcessedRows      int     `json:"processed_rows"`
	ProgressPercentage float32 `json:"progress_percentage"`
	IsCompleted        bool    `json:"is_completed"`
	ErrorDetail        string  `json:"error_detail,optional"`
	ErrorLine          int     `json:"error_line,optional"`
	LastUpdatedTime    string  `json:"last_updated_time,optional"`
}

type LoadServerMetricsCSVRequest struct {
}

type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Code    int               `json:"code"`
	Message string            `json:"message"`
	Data    LoginResponseData `json:"data,optional"`
}

type LoginResponseData struct {
	Token       string   `json:"token"`
	User        UserInfo `json:"user"`
	LoginSource string   `json:"login_source"`
	ExpiresAt   int64    `json:"expires_at"`
}

type LogoutResponse struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

type ManualAddHostRequest struct {
	HostIp                string                 `json:"host_ip"`                           // 主机IP（必填）
	HostName              string                 `json:"host_name,optional"`                // 主机名
	HardwareInfo          ManualHostHardwareInfo `json:"hardware_info,optional"`            // 硬件信息
	Applications          []HostApplicationInfo  `json:"applications,optional"`             // 应用信息列表
	AutoFetchFromCmdb     bool                   `json:"auto_fetch_from_cmdb,optional"`     // 是否从CMDB自动获取信息
	AutoFetchFromClusters bool                   `json:"auto_fetch_from_clusters,optional"` // 是否从集群实例表自动获取应用信息
	IdcId                 int                    `json:"idc_id,optional"`                   // IDC机房ID
}

type ManualAddHostResponse struct {
	Success         bool            `json:"success"`
	Message         string          `json:"message"`
	AutoFetchResult AutoFetchResult `json:"auto_fetch_result,optional"` // 自动获取的结果（用于填充表单）
}

type ManualHostHardwareInfo struct {
	DiskSize        int    `json:"disk_size"`         // 磁盘大小(GB)
	Ram             int    `json:"ram"`               // 内存大小(GB)
	Vcpus           int    `json:"vcpus"`             // CPU核数
	HostType        string `json:"host_type"`         // 主机类型
	H3cId           string `json:"h3c_id"`            // H3C ID
	H3cStatus       string `json:"h3c_status"`        // H3C状态
	IfH3cSync       string `json:"if_h3c_sync"`       // 是否H3C同步
	H3cImgId        string `json:"h3c_img_id"`        // H3C镜像ID
	H3cHmName       string `json:"h3c_hm_name"`       // H3C主机名
	LeafNumber      string `json:"leaf_number"`       // 叶子编号
	RackNumber      string `json:"rack_number"`       // 机柜编号
	RackHeight      int    `json:"rack_height"`       // 机柜高度
	RackStartNumber int    `json:"rack_start_number"` // 机柜起始编号
	FromFactor      int    `json:"from_factor"`       // From因子
	SerialNumber    string `json:"serial_number"`     // 序列号
}

type ModifyHostsApplicationRequest struct {
	Data []HostApplicationRequest `json:"data"`
}

type MonitoringVerificationData struct {
	TotalHosts                 int                     `json:"total_hosts"`
	HostsWithMonitoring        int                     `json:"hosts_with_monitoring"`
	HostsWithoutMonitoring     int                     `json:"hosts_without_monitoring"`
	MonitoringCoverage         float32                 `json:"monitoring_coverage"`
	HostsWithoutMonitoringList []HostWithoutMonitoring `json:"hosts_without_monitoring_list"`
}

type MonitoringVerificationRequest struct {
	StartTime string `json:"start_time"`
	EndTime   string `json:"end_time"`
}

type MonitoringVerificationResponse struct {
	Success bool                       `json:"success"`
	Message string                     `json:"message"`
	Data    MonitoringVerificationData `json:"data"`
}

type ReportRequest struct {
	Email string `json:"email"`
	HTML  string `json:"html,optional"`
}

type ResourceUsageData struct {
	GroupName       string  `json:"group_name"`
	ClusterName     string  `json:"cluster_name"`
	DepartmentName  string  `json:"department_name"`
	CPUPeakUsage    float64 `json:"cpu_peak_usage"`
	CPUThreshold    float64 `json:"cpu_threshold"`
	MemoryPeakUsage float64 `json:"memory_peak_usage"`
	MemoryThreshold float64 `json:"memory_threshold"`
	DiskPeakUsage   float64 `json:"disk_peak_usage"`
	DiskThreshold   float64 `json:"disk_threshold"`
}

type ScheduledTaskExecutionDetail struct {
	HostIp          string `json:"host_ip"`
	ResourceType    string `json:"resource_type"`
	TargetPercent   int    `json:"target_percent"`
	Duration        int    `json:"duration"`
	ExecutionStatus string `json:"execution_status"`
	StartTime       string `json:"start_time,optional"`
	EndTime         string `json:"end_time,optional"`
	ExitCode        int    `json:"exit_code,optional"`
	StdoutLog       string `json:"stdout_log,optional"`
	StderrLog       string `json:"stderr_log,optional"`
	ResultSummary   string `json:"result_summary,optional"`
	SSHError        string `json:"ssh_error,optional"`
	CreateTime      string `json:"create_time"`
}

type ScheduledTaskExecutionDetailsRequest struct {
	ExecutionTaskId string `path:"execution_task_id"`
}

type ScheduledTaskExecutionHistoryInfo struct {
	Id              int    `json:"id"`
	ScheduledTaskId int    `json:"scheduled_task_id"`
	ExecutionTaskId string `json:"execution_task_id"`
	ExecutionTime   string `json:"execution_time"`
	ExecutionStatus string `json:"execution_status"` // success, failed, partial
	TotalHosts      int    `json:"total_hosts"`
	SuccessHosts    int    `json:"success_hosts"`
	FailedHosts     int    `json:"failed_hosts"`
	ErrorMessage    string `json:"error_message,optional"`
}

type ScheduledTaskExecutionInfo struct {
	ScheduledTaskId int                            `json:"scheduled_task_id"`
	TaskName        string                         `json:"task_name"`
	ExecutionTaskId string                         `json:"execution_task_id"`
	ExecutionTime   string                         `json:"execution_time"`
	ExecutionStatus string                         `json:"execution_status"`
	TotalHosts      int                            `json:"total_hosts"`
	SuccessHosts    int                            `json:"success_hosts"`
	FailedHosts     int                            `json:"failed_hosts"`
	ResourceType    string                         `json:"resource_type"`
	TargetPercent   int                            `json:"target_percent"`
	Duration        int                            `json:"duration"`
	HostDetails     []ScheduledTaskExecutionDetail `json:"host_details"`
}

type ScheduledTaskInfo struct {
	Id                int    `json:"id"`
	TaskName          string `json:"task_name"`
	Description       string `json:"description,optional"`
	CronExpression    string `json:"cron_expression"`
	HostIpList        string `json:"host_ip_list"` // JSON格式的主机IP列表
	ResourceType      string `json:"resource_type"`
	TargetPercent     int    `json:"target_percent"`
	Duration          int    `json:"duration"`
	ScriptParams      string `json:"script_params,optional"`
	ForceExecution    bool   `json:"force_execution"`
	IsEnabled         bool   `json:"is_enabled"`
	CreatedBy         string `json:"created_by,optional"`
	CreatedAt         string `json:"created_at"`
	UpdatedAt         string `json:"updated_at"`
	LastExecutionTime string `json:"last_execution_time,optional"`
	NextExecutionTime string `json:"next_execution_time,optional"`
}

type ServerResource struct {
	ID             int               `json:"id"`
	CreateAt       string            `json:"create_at"`
	UpdateAt       string            `json:"update_at"`
	PoolID         int               `json:"pool_id"`
	ClusterName    string            `json:"cluster_name"`
	GroupName      string            `json:"group_name"`
	Ip             string            `json:"ip"`
	Port           int               `json:"port"`
	InstanceRole   string            `json:"instance_role"`
	TotalMemory    float64           `json:"total_memory"`
	UsedMemory     float64           `json:"used_memory"`
	TotalDisk      float64           `json:"total_disk"`
	UsedDisk       float64           `json:"used_disk"`
	CPUCores       int               `json:"cpu_cores"`
	CPULoad        float64           `json:"cpu_load"`
	DateTime       string            `json:"date_time"`
	DepartmentName string            `json:"department_name"`
	IdcInfo        IdcInfo           `json:"idc_info,optional"` // IDC机房信息
	Clusters       []HostClusterInfo `json:"clusters"`          // 新增：主机所属的集群列表
	CpuPercentMax  float64           `json:"cpu_percent_max,optional"`
	CpuPercentAvg  float64           `json:"cpu_percent_avg,optional"`
	CpuPercentMin  float64           `json:"cpu_percent_min,optional"`
	MemPercentMax  float64           `json:"mem_percent_max,optional"`
	MemPercentAvg  float64           `json:"mem_percent_avg,optional"`
	MemPercentMin  float64           `json:"mem_percent_min,optional"`
	DiskPercentMax float64           `json:"disk_percent_max,optional"`
	DiskPercentAvg float64           `json:"disk_percent_avg,optional"`
	DiskPercentMin float64           `json:"disk_percent_min,optional"`
}

type ServerResourceListResponse struct {
	Success bool             `json:"success"`
	Message string           `json:"message"`
	List    []ServerResource `json:"list"`
}

type ServerResourceMax struct {
	ID             int               `json:"id"`
	CreateAt       string            `json:"create_at"`
	UpdateAt       string            `json:"update_at"`
	PoolID         int               `json:"pool_id"`
	ClusterName    string            `json:"cluster_name"`
	GroupName      string            `json:"group_name"`
	Ip             string            `json:"ip"`
	TotalMemory    float64           `json:"total_memory"`
	MaxUsedMemory  float64           `json:"max_used_memory"`
	TotalDisk      float64           `json:"total_disk"`
	MaxUsedDisk    float64           `json:"max_used_disk"`
	CPUCores       int               `json:"cpu_cores"`
	MaxCPULoad     float64           `json:"max_cpu_load"`
	MaxDateTime    string            `json:"max_date_time"`
	HostName       string            `json:"host_name"`
	HostType       string            `json:"host_type"`
	IdcInfo        IdcInfo           `json:"idc_info,optional"` // IDC机房信息
	Clusters       []HostClusterInfo `json:"clusters,optional"`
	CpuPercentMax  float64           `json:"cpu_percent_max,optional"`
	CpuPercentAvg  float64           `json:"cpu_percent_avg,optional"`
	CpuPercentMin  float64           `json:"cpu_percent_min,optional"`
	MemPercentMax  float64           `json:"mem_percent_max,optional"`
	MemPercentAvg  float64           `json:"mem_percent_avg,optional"`
	MemPercentMin  float64           `json:"mem_percent_min,optional"`
	DiskPercentMax float64           `json:"disk_percent_max,optional"`
	DiskPercentAvg float64           `json:"disk_percent_avg,optional"`
	DiskPercentMin float64           `json:"disk_percent_min,optional"`
}

type ServerResourceMaxListResponse struct {
	Success bool                `json:"success"`
	Message string              `json:"message"`
	List    []ServerResourceMax `json:"list"`
}

type ServerResourceRequest struct {
	StartDate      string `form:"startDate,optional"`
	EndDate        string `form:"endDate,optional"`
	Ip             string `form:"ip,optional"`
	Cluster        string `form:"cluster,optional"`
	DepartmentName string `form:"departmentName,optional"`
}

type SyncClusterGroupsResponse struct {
	Message     string               `json:"message"`
	Success     bool                 `json:"success"`
	SyncedCount int                  `json:"synced_count"`
	Details     []DatabaseSyncDetail `json:"details"`
}

type SyncExternalCmdbRequest struct {
	PageSize    int  `json:"page_size,optional"`    // 每页数据量，默认100
	HostOwner   int  `json:"host_owner,optional"`   // 主机所有者ID，为空则同步所有
	ForceUpdate bool `json:"force_update,optional"` // 是否强制更新已存在的主机信息
}

type SyncExternalCmdbResponse struct {
	Success        bool               `json:"success"`
	Message        string             `json:"message"`
	TotalPages     int                `json:"total_pages"`     // 总页数
	ProcessedPages int                `json:"processed_pages"` // 已处理页数
	TotalHosts     int                `json:"total_hosts"`     // 总主机数
	SyncedHosts    int                `json:"synced_hosts"`    // 成功同步的主机数
	UpdatedHosts   int                `json:"updated_hosts"`   // 更新的主机数
	FailedHosts    int                `json:"failed_hosts"`    // 失败的主机数
	SyncResults    []ExternalCmdbHost `json:"sync_results"`    // 同步结果详情
}

type UpdateExternalSyncTaskRequest struct {
	TaskId         int64  `path:"task_id"`                   // 任务ID
	TaskName       string `json:"task_name"`                 // 任务名称
	Description    string `json:"description,optional"`      // 任务描述
	DataSource     string `json:"data_source"`               // 数据源
	EsEndpoint     string `json:"es_endpoint,optional"`      // ES接口地址
	EsIndexPattern string `json:"es_index_pattern,optional"` // ES索引模式
	CronExpression string `json:"cron_expression"`           // Cron表达式
	QueryTimeRange string `json:"query_time_range,optional"` // 查询时间范围
	CmsysQuery     string `json:"cmsys_query,optional"`      // CMSys查询参数（data_source=cmsys时使用）
}

type UpdateExternalSyncTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type UpdateScheduledTaskRequest struct {
	Id             int      `path:"id"`
	TaskName       string   `json:"task_name"`
	Description    string   `json:"description,optional"`
	CronExpression string   `json:"cron_expression"`
	HostIpList     []string `json:"host_ip_list"`
	ResourceType   string   `json:"resource_type"`          // cpu, memory, disk
	TargetPercent  int      `json:"target_percent"`         // 1-100
	Duration       int      `json:"duration"`               // 秒
	ScriptParams   string   `json:"script_params,optional"` // JSON格式
	ForceExecution bool     `json:"force_execution,optional"`
}

type UpdateScheduledTaskResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type UserInfo struct {
	ID          int64  `json:"id"`
	Username    string `json:"username"`
	Email       string `json:"email"`
	DisplayName string `json:"display_name"`
	IsAdmin     bool   `json:"is_admin"`
	IsActive    bool   `json:"is_active"`
	LoginSource string `json:"login_source"`
	LastLoginAt string `json:"last_login_at"`
}

type UserInfoResponse struct {
	Code    int      `json:"code"`
	Message string   `json:"message"`
	Data    UserInfo `json:"data,optional"`
}
